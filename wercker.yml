# This references the default golang container from
# the Docker Hub: https://registry.hub.docker.com/u/library/golang/
# If you want Google's container you would reference google/golang
# Read more about containers on our dev center
# http://devcenter.wercker.com/docs/containers/index.html
box: tcnksm/gox:1.4.2
# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# http://devcenter.wercker.com/docs/pipelines/index.html

# You can also use services such as databases. Read more on our dev center:
# http://devcenter.wercker.com/docs/services/index.html
# services:
    # - postgres
    # http://devcenter.wercker.com/docs/services/postgresql.html

    # - mongodb
    # http://devcenter.wercker.com/docs/services/mongodb.html
build:
  # The steps that will be executed on build
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # http://devcenter.wercker.com/docs/steps/index.html
  steps:
    # Sets the go workspace and places you package
    # at the right place in the workspace tree
    - setup-go-workspace:
        package-dir: github.com/totallymike/fetch

    # Gets the dependencies
    - script:
        name: go get
        code: |
          go get

    # Build the project
    - script:
        name: go build
        code: |
          go build ./...

    - wercker/gox:
        os: "darwin linux windows"
        arch: "386 amd64"
        output: "{{.Dir}}_{{.OS}}_{{.Arch}}"
    # Test the project
    - script:
        name: go test
        code: |
          go test ./...
    - script:
        name: prepare
        code: |
          echo $WERCKER_GIT_COMMIT > $WERCKER_OUTPUT_DIR/HEAD
          mv $WERCKER_OUTPU_DIR/pkg $WERCKER_OUTPUT_DIR/latest
          cp -r $WERCKER_OUTPUT_DIR/latest $WERCKER_OUTPUT_DIR/$WERCKER_GIT_COMMIT
deploy:
  steps:
    - script:
        name: Set git repository if not set
        code: |
          if [ -z "$WERCKER_GIT_REPOSITORY" ]
          then
            export WERCKER_GIT_REPOSITORY=fetch
          fi
    - script:
        name: ugh
        code: |
          ls
    - tcnksm/ghr:
        token: $GITHUB_TOKEN
        input: $WERCKER_GIT_COMMIT
        replace: true
dev:
  steps:
    - setup-go-workspace:
        package-dir: github.com/totallymike/fetch
    - internal/watch:
        code: |
          go get -t
          go build ./...
          go test ./...